services:
  api:
    build:
      context: .
      dockerfile: ./apps/backend-api/Dockerfile
    env_file:
      - path: ./.env
        required: false
    environment:
      PORT: 8080
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL: ${POSTGRES_SSL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
    ports:
      - '8080:8080'
    depends_on:
      - db
      - minio
      - worker

  worker:
    build:
      context: .
      dockerfile: ./apps/backend-worker/Dockerfile
    env_file:
      - path: ./.env
        required: false
    environment:
      PORT: 8181
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL: ${POSTGRES_SSL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      QUEUE_PROCESS_THUMBNAIL: ${QUEUE_PROCESS_THUMBNAIL}
    ports:
      - '8181:8181'
    depends_on:
      - db
      - minio