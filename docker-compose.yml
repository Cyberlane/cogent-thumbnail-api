services:
  db:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - path: .env
        required: true
  
  # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
  # (Adding the "ports" property to this file will not forward from a Codespace.)

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
      #- ./init-minio.sh:/init-minio.sh
    command: minio server /data --console-address ":9001"
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.

  redis:
    image: redis
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  api:
    build:
      context: ./apps/backend-api
    container_name: cogent-api
    env_file:
      - path: .env
        required: true
    environment:
      PORT: 8080
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL: ${POSTGRES_SSL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      QUEUE_PROCESS_THUMBNAIL: ${QUEUE_PROCESS_THUMBNAIL}
    ports:
      - '8080:8080'
    depends_on:
      - db
      - minio
      - worker

  worker:
    build:
      context: ./apps/backend-worker
    container_name: cogent-worker
    env_file:
      - path: .env
        required: true
    environment:
      PORT: 8181
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_SSL: ${POSTGRES_SSL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      QUEUE_PROCESS_THUMBNAIL: ${QUEUE_PROCESS_THUMBNAIL}
    ports:
      - '8181:8181'
    depends_on:
      - db
      - minio

networks:
  default:
    driver: bridge

volumes:
  postgres-data:
  minio_data:
  redis-data: